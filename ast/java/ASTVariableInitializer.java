/* Generated By:JJTree: Do not edit this line. ASTVariableInitializer.java */

package softtest.ast.java;

import java.util.ArrayList;
import java.util.List;

public class ASTVariableInitializer extends SimpleJavaNode {
	public ASTVariableInitializer(int id) {
		super(id);
	}

	public ASTVariableInitializer(JavaParser p, int id) {
		super(p, id);
	}

	/**
	 * Accept the visitor. *
	 */
	@Override
	public Object jjtAccept(JavaParserVisitor visitor, Object data) {
		return visitor.visit(this, data);
	}

	//added by xqing
	/** 存储维数及每一维的长度 */
	private ArrayList<Integer> dims = new ArrayList<Integer>();
	
	/** 是否已经统计过维长的标记 */
	private boolean iscaldimsed = false;

	/** 设置统计标志 */
	public void setiscaldimsed(boolean iscaldimsed) {
		this.iscaldimsed = iscaldimsed;
	}
	
	/** 返回统计标志 */
	public boolean getiscaldimsed(){
		return iscaldimsed;
	}
	
	/** 返回所有维长 */
	public ArrayList<Integer> getdims() {
		return dims;
	}

	/** 统计所有维长 */
	public void calDims() {
		if(iscaldimsed){
			return;
		}
		setiscaldimsed(true);
		List list = findDirectChildOfType(ASTArrayInitializer.class);
		if (!list.isEmpty()) {
			ASTArrayInitializer array = (ASTArrayInitializer) list.get(0);
			array.calDims();
			dims.addAll(array.getdims());
		}
	}
}
